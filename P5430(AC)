import java.io.*;
import java.util.LinkedList;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
        StringTokenizer st;

        int T = Integer.parseInt(br.readLine());
        for (int i = 0; i < T; i++) {
            String p = br.readLine();
            int n = Integer.parseInt(br.readLine());

            int dir = 1;

            LinkedList<Integer> arr = new LinkedList<>();
            StringBuilder sb = new StringBuilder();

            st = new StringTokenizer(br.readLine(), "[,]");
            for (int j = 0; j < n; j++) {
                arr.add(Integer.parseInt(st.nextToken()));
            }

            for (int j = 0; j < p.length(); j++) {
                if (p.charAt(j) == 'R') {
                    dir *= -1;
                } else {
                    if (arr.isEmpty()) {
                        sb.append("error\n");
                        break;
                    } else {
                        if (dir == 1) arr.pollFirst();
                        else arr.pollLast();
                    }
                }
            }

            if (sb.length() == 0) {
                int size = arr.size();
                sb.append("[");
                if (dir == 1) {
                    for (int j = 0; j < size; j++) {
                        sb.append(arr.pollFirst()).append(",");
                    }
                } else {
                    for (int j = 0; j < size; j++) {
                        sb.append(arr.pollLast()).append(",");
                    }
                }
                if (sb.charAt(sb.length() - 1) == ',') sb.deleteCharAt(sb.length() - 1);

                sb.append("]\n");
            }
            bw.write(String.valueOf(sb));
        }

        br.close();
        bw.flush();
        bw.close();
    }
}

// 그렇게 깔끔하게 짠 것 같지는 않은 코드이지만 통과한 코드
// if문 중첩이 많은 편
// deque 메소드를 사용해서 삭제를 진행했고 StringBuilder 메소드를 사용해서 문자열 처리를 진행했다
