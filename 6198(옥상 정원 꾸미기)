import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Stack;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = Integer.parseInt(br.readLine());
        long[] buildings = new long[N];
        long[] obstacles = new long[N];

        Stack<Integer> stack = new Stack<>();

        for (int i = 0; i < N; i++) {
            buildings[i] = Long.parseLong(br.readLine());
            obstacles[i] = 0;
        }

        stack.push(0);
        for (int i = 1; i < N; i++) {
            while (!stack.empty() && buildings[stack.peek()] <= buildings[i]) {
                obstacles[stack.pop()] = i;
            }

            stack.push(i);
        }

        while(!stack.empty()) {
            obstacles[stack.pop()] = N;
        }

        long result = 0;
        for (int i = 0; i < N; i++) {
            result += (obstacles[i] - i - 1);
        }

        System.out.println(result);
    }
}

// 접근은 오큰수와 같게 했다
// 거기서 다른 점은 오른쪽에 있는 큰수 사이에 있는 건물 개수였기 때문에 배열을 하나 더 만들었다는 것이다
// 예제가 맞아서 반례를 찾았더니 같은 건물에 대한 처리는 없었다는 걸 알고 추가했다
// 제출했을 때 틀려서 뭐지 했는데 결과값이 int형 범위를 넘어서기 때문이어서 long으로 바꿨더니 통과했다
